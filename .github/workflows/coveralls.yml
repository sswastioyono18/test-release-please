name: Test Coverage
on:
  pull_request:

jobs:
  test-coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Checking current repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          path: current

      - name: Checking base repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          path: base

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.x

      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Run Unit tests main
        id: unit-test-master
        run: |-
          cd base
          git fetch
          git checkout main
          git rev-parse HEAD
          go mod download
          go install github.com/jandelgado/gcov2lcov@latest
          go clean -testcache | go test -covermode atomic -coverprofile=coverage.out ./...
          gcov2lcov -infile=coverage.out -outfile=coverage.lcov
          echo "::set-output name=totalcoverage::$(go tool cover -func coverage.out | grep total | awk '{print substr($3, 1, length($3)-1)}')"
          

      - name: Run Unit tests
        id: unit-test-current
        run: |-
          cd current
          go install github.com/jandelgado/gcov2lcov@latest
          go clean -testcache | go test -covermode atomic -coverprofile=coverage.out ./...
          gcov2lcov -infile=coverage.out -outfile=coverage.lcov
          echo "::set-output name=totalcoverage::$(go tool cover -func coverage.out | grep total | awk '{print substr($3, 1, length($3)-1)}')"
      - name: Comment PR
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          recreate: true
          message: |
            ##  <img src="https://golang.org/lib/godoc/images/go-logo-blue.svg" height="15" /> Unit Test Coverage
            ```
            Current branch coverage : ${{ steps.unit-test-current.outputs.totalcoverage }} 
            Master branch coverage : ${{steps.unit-test-master.outputs.totalcoverage }}
            ```
      - name: Fail
        if: steps.unit-test-current.outputs.totalcoverage < steps.unit-test-master.outputs.totalcoverage
        run: |-
          echo "::error :: unit test coverage is below master"
          exit 1


      - name: Send coverage
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |-
          cd current
          GO111MODULE=off go get github.com/mattn/goveralls
          $(go env GOPATH)/bin/goveralls -coverprofile=coverage.out -service=github
